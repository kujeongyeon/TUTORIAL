package tutorial;

public class method1 {

	public static void numbering () {
		
		//numbering이라는 메소드(f(x)같은 함수)안에 로직을 짠다 : public static 뒤에 원하는 이름으로 메소드 만들수있음
		
		int i = 0; // 변수 i에 int라는 데이터 타입을 선언해주고 0을 넣어줌 : 이걸 '초기화한다'고 함 
		/*
		i는 그릇이지만 어떤 모양과 크기의 그릇인지 알수없음 허나 int 라는 
		그릇의 크기를 지정해주면 이 그릇은 숫자를 -2억부터 2억까지 담을수있다는걸 알수있다
		이 외에 다양한 데이터 타입들이 있음 boolean , long, float 등등 기본적으로 int 많이 씀
		
		초기화 해주는 이유? 선언만하고 초기화 (=값을 지정) 해주지않으면 출력할때 알 수없는 값이 출력되기 때문이다
		*/
		
		while (i <= 10) { //i(0)이 10보다 작거나 같으면 반복 -> i(1)이 10보다 작거나 같으면 반복 ...
		
		/*
	     반복문 while임 ()안에는 조건을 걸어주고 조건이 '참'이면 { } 가 실행됨
		*/
			
			System.out.println(i); //0부터 10까지 출력하겠지 
		
		/*
		System.out.println 에대한 정확한 이해는 javadoc를 뒤져야함 출력을 해주는 용도로만 알고있자
		*/
			
			i++; //이게 없으면 i가 계속 0이겠지?
			
	    /*
	     연산자임 증가연산자로 항의 값을 1씩 증가시켜줌 ++i 와 i++ 는 다르다
	    */
			
		} //반복문 끝
		
	}
	
	//0부터 1까지 출력해주는 numbering 함수를 만들었으면 이제 써봐야지 않겠음?
	
	public static void main(String[] args) { 
		// 요기 밑에다 함수를 써야 출력이됨 
		// 자바는 main 메서드를 호출하고 우리가 하는건 메인 메서드의 로직을 짜는거임 
		
		numbering(); //로직 끝엔 따옴표를 붙여주자. 규칙임
		
		//메소드 출력 0~10까지 출력됨
		
		/*
		 * 만약 0~10까지 5번,천번 반복 하고 싶다? numbering을 5번,천번 써주면됨 만약 수정하고 싶다? 
		 * numbering의 메서드를 한번만 수정 하면됨
		 * 근데 만약 메소드가 없다면 while문을 다섯번,천번 써줄뿐더러 수정할때도 막막 하겠지 
		 * 이런 점을 메소드의 재활용성이라고 한다 걍 여러번 재사용하기 편하다는 말임
		 * 
		 * */
	}// 다음 : 메인 메서드의 끝. 이제 0~10이 아니라 원하는 숫자부터 원하는 숫자까지 출력 가능하도록 해보자

}

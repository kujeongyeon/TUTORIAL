package tutorial;

public class object4 {
	/*
	 *  유효범위
	 *  수많은 시행착오를 거쳐 만든 부품으로써의 가치를 높이는 규칙
	 */
	static void a () {
		int i = 0;
	}
	
	public static void main(String[] args) {
		
		for (int i=0; i<5; i++) {
			a(); // 메소드 a를 호출함 
			
			/*
			 * 만약 a의 i를 for문의 i(외부의 i)가 덮어 쓰게 된다면?
			 * a를 호출할 때 마다 i가 0이 될테니 무한 반복에 빠지겠지??? 그렇게 안하려면 변수이름을
			 * 바꿔줘야 되는데 그건 부품으로써의 역할 (은닉화,캡슐화)에 충실하지 못하다. 
			 * 좋은 부품은 그 내부가 어떻게 생겼는지 모르고도 사용하는 방법만 안다면 쉽게 쓸수있어야하는데
			 * 이름을 바꿔주는 방식은 메소드 내부의 변수를 찾아내서 이름을 변경해야됨 복잡함
			 * 그래서 아예 외부의 변수에 영향을 받지 않도록 정해둔것임.
			 */
			System.out.println(i);
		}

	}

}
